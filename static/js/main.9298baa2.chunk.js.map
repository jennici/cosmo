{"version":3,"sources":["pictures/style.png","pictures/styletext.png","pictures/beauty.png","pictures/sex.png","pictures/politics.png","pictures/climate.png","pictures/Keep-calm-and-be-sustainable.jpg","pictures/loading_earth2.gif","pictures/meltingice.png","components/Navbar.js","components/Style.js","components/Footer.js","components/Beauty.js","components/Sex.js","components/Politics.js","components/ArticleTeaser.js","components/Menu.js","components/ClimateChangeGraph.js","components/GlobalTemperature.js","components/GlacierSize.js","components/Climate.js","components/AllComponents.js","App.js","serviceWorker.js","index.js","pictures/logo.png"],"names":["module","exports","Navbar","className","to","src","logo","classNameName","style","height","width","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","Component","Style","styletext","Footer","Beauty","beauty","Sex","sex","Politics","politics","ArticleTeaser","state","data","title","author","url","image","display","justifyContent","map","flexDirection","margin","color","filter","item","class","href","Menu","props","clicked_index","clickHandler","bind","index","console","log","this","setState","marginTop","onClick","co2","temp","glacier","CO2Emission","zoomDomain","x","Date","isCO2","domain","emission","undefined","dataLineChart","Year","Value","parseInt","padding","marginLeft","top","left","right","bottom","scale","containerComponent","zoomDimension","onZoomDomainChange","handleZoom","stroke","y","brushDimension","brushDomain","onBrushDomainChange","tickFormat","getFullYear","GlobalTemperature","isTemp","temperature","info","GlacierSize","isGlacier","glaciersize","Climate","triggerCO2EmissionState","triggerGlobalTemperatureState","triggerGlacierSizeState","currentChart","climate","marginRight","calm","AllComponents","path","App","sealevel","loading","url2","url3","url4","fetch","response1","json","data1","response2","data2","response3","data3","response4","data4","alignItems","earth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9298baa2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/style.76ea2ffa.png\";","module.exports = __webpack_public_path__ + \"static/media/styletext.62d499bd.png\";","module.exports = __webpack_public_path__ + \"static/media/beauty.a65444be.png\";","module.exports = __webpack_public_path__ + \"static/media/sex.f5a8e488.png\";","module.exports = __webpack_public_path__ + \"static/media/politics.45123c4f.png\";","module.exports = __webpack_public_path__ + \"static/media/climate.7417b91e.png\";","module.exports = __webpack_public_path__ + \"static/media/Keep-calm-and-be-sustainable.cc49fb16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading_earth2.23d0811f.gif\";","module.exports = __webpack_public_path__ + \"static/media/meltingice.1c8f7462.png\";","import React, { Component } from 'react'\r\nimport logo from '../../src/pictures/logo.png'\r\nimport '../../src/css/cosmo.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <Link className=\"nav-link\" to=\"/\"><img src={logo} classNameName=\"nav-logo\" style={{ height: \"30px\", width: \"auto\" }} alt=\"logo\" /></Link>\r\n                    {/*Make Toggler working*/}\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" activeClassName=\"chosen\" to=\"/style\">style</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" activeClassName=\"chosen\" to=\"/beauty\">beauty</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" activeClassName=\"chosen\" to=\"/sex\">sex</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" activeClassName=\"chosen\" to=\"/politics\">politics</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" activeClassName=\"chosen\" to=\"/climate\">climate</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, {Component} from 'react'\r\nimport style from '../pictures/style.png'\r\nimport styletext from '../pictures/styletext.png'\r\nimport '../css/cosmo.css'\r\n\r\n\r\nclass Style extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <img src={style} style={{width: \"100%\"}} alt=\"stylepicture\" />\r\n                <h1>45 Cute Gift Ideas for Any Women In Your Life</h1>\r\n                <img src={styletext} style={{width: \"100%\"}} alt=\"styletextpic\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Style","import React, { Component } from 'react'\r\nimport logo from '../../src/pictures/logo.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Copyright group C4</h5>\r\n                    <p className=\"card-text\">cosmopolitan magazine climate page</p>\r\n                    <Link to=\"/climate\"><img src={logo} className=\"footer-logo\" style={{height: \"30px\", width: \"auto\"}} alt=\"logo-footer\"/></Link>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\r\nimport beauty from '../pictures/beauty.png'\r\n\r\nclass Beauty extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <img src={beauty} style={{width: \"100%\"}} alt=\"beautypic\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Beauty","import React, {Component} from 'react'\r\nimport sex from '../pictures/sex.png'\r\n\r\nclass Sex extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <img src={sex} style={{width: \"100%\"}} alt=\"sexpic\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sex","import React, {Component} from 'react'\r\nimport politics from '../pictures/politics.png'\r\n\r\nclass Politics extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <img src={politics} style={{width: \"100%\"}} alt=\"politicspic\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Politics","import React, { Component } from 'react';\r\nimport '../css/cosmo.css'\r\n\r\nexport default class ArticleTeaser extends Component {\r\n    state={\r\n        data: [\r\n            {\r\n              type: \"Beauty\",\r\n              title: \"Cruelty-Free & Vegan Hair Product Brands\",\r\n              author: \"SOPHIA\",\r\n              url: \"https://ethicalelephant.com/cruelty-free-vegan-hair-products/\",\r\n              image: \"https://ethicalelephant.com/wp-content/uploads/2016/08/cruelty-free-vegan-hair-brands.jpg\",\r\n              alt: \"free vegan hair brands\"\r\n            },\r\n            {\r\n              type: \"Beauty\",\r\n              title: \"Nail Polish for Vegans\",\r\n              author: \"CARLI CARDELLINO\",\r\n              url: \"https://www.cosmopolitan.com/style-beauty/beauty/how-to/a10886/obsessive-compulsivecosmetics-vpl-nail-polish/\",\r\n              image: \"https://hips.hearstapps.com/cos.h-cdn.co/assets/cm/14/25/53a0903aa8f0b_-_cos-obsessive-compulsive-cosmetics-vpl-mdn.jpg?resize=768:*\",\r\n              alt: \"nail polish for vegan\"\r\n            },\r\n            {\r\n                type: \"Fashion\",\r\n                title: \"Okay, but What Does 'Sustainable Fashion' Actually Mean?\",\r\n                author: \"LAUREN ADHAV\",\r\n                url: \"./ArticleTwo\",\r\n                image: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/sustainable-fashion-1559169790.jpg?crop=1.00xw:1.00xh;0,0&resize=980:*\",\r\n                alt: \"sustainable fashion explained\"\r\n              },\r\n            {\r\n              type: \"Fashion\",\r\n              title: \"21 Sustainable Clothing Brands for People Who Give a Sh*t About the Environment\",\r\n              author: \"CARLI CARDELLINO\",\r\n              url: \"https://www.cosmopolitan.com/stylebeauty/fashion/g9255699/sustainable-eco-green-clothingbrands/\",\r\n              image: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/sustainable-fashion-1559169790.jpg?crop=1.00xw:1.00xh;0,0&resize=980:*\",\r\n              alt: \"sustainable clothing\"\r\n            },\r\n            {\r\n              type: \"Interview\",\r\n              title: \"Interview: Michael Bloomberg on climate change optimism\",\r\n              author: \"OZEANA\",\r\n              url: \"https://www.theoryculturesociety.org/interview-with-mike-hulme-on-climate-change-and-consumption/\",\r\n              image: \"https://oceana.org/sites/default/files/styles/ntsc/public/subway_1.jpg?itok=Czoi4kvU\",\r\n              alt: \"Michael Bloomberg on climate change optimism\"\r\n            },\r\n          ],\r\n    }\r\n    render() {\r\n        \r\n        const types = [\"Beauty\", \"Fashion\", \"Interview\"];\r\n\r\n        return (\r\n            <div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    {types.map(type => {\r\n                    return (\r\n                        <div style={{ display: \"flex\", flexDirection: \"column\", margin: \"50em\" }}>\r\n                            <h1 style={{ color: \"#575A89\" }}>{type}</h1>\r\n                                {this.state.data.filter(item => item.type === type).map(item => {\r\n                                return (\r\n                                        <div class=\"ui card\">\r\n                                            <a style={{ display: \"flex\" }} href={item.url} className=\"App\">\r\n                                                <img className=\"teaser-img\" src={item.image} alt={item.alt} />\r\n                                                <div>\r\n                                                    <p className=\"teaserlink\">{item.title}</p>\r\n                                                    <p className=\"teaserlink\">-->{item.author}</p>\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                  \r\n                                    )\r\n                                })}\r\n                            </div>)}\r\n                        )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../src/css/cosmo.css';\r\n\r\nexport default class Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {clicked_index: 0};\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n      }\r\n      \r\n      clickHandler(index){\r\n        console.log(index)\r\n          this.setState({clicked_index: index});\r\n      };\r\n\r\n      render() {\r\n\r\n       // if (props.clicked) make it active and show colour difference, look up work from other girl or Kayvan or YT\r\n            \r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"ui secondary pointing menu\" id=\"myMenu\" style={{marginTop: \"15%\"}}>\r\n                    <button \r\n                        className=\"item\"\r\n                        onClick={() => this.props.co2() }\r\n                    >\r\n                        Global CO2 emissions\r\n                    </button>\r\n                    <button \r\n                        className=\"item\" \r\n                        onClick={() => this.props.temp() }\r\n                    >\r\n                        Global Temperature\r\n                    </button>\r\n                    <button \r\n                        className=\"item\" \r\n                        onClick={() => this.props.glacier() }\r\n                    >\r\n                        Glacier Size\r\n                    </button>                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { \r\n    VictoryChart, \r\n    VictoryZoomContainer, \r\n    VictoryLine, \r\n    VictoryBrushContainer,\r\n    VictoryAxis,\r\n   // VictoryTooltip \r\n} from 'victory';\r\nimport '../../src/css/cosmo.css';\r\n\r\nexport default class CO2Emission extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          zoomDomain: { x: [new Date(1950, 1, 1), new Date(2014, 1, 1)] },\r\n          isCO2: []\r\n        };\r\n      }\r\n\r\n      handleZoom(domain) {\r\n        this.setState({ zoomDomain: domain });\r\n      }\r\n\r\n    render() {\r\n\r\n        const emission = this.props.emission;\r\n        if (emission === undefined) return <p>No data avaiable.</p>\r\n\r\n        // map every row from emission (array) to x and y values\r\n        const dataLineChart = emission.map(item => {\r\n            return { \r\n                Year: new Date(item[\"Year\"], 1, 1), \r\n                Value: parseInt(item[\"Total\"])\r\n            };\r\n        });\r\n\r\n        // info = () => {\r\n        //     $('.ui.longer.modal').modal('show');\r\n        //     return (\r\n        //         <div class=\"ui modal\">\r\n        //             <div class=\"header\">Header</div>\r\n        //             <div class=\"scrolling content\">\r\n        //                 <p>Very long content goes here</p>\r\n        //             </div>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n  \r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"graph\">Global CO2 emissions from fossil fuels  \r\n                    <button className=\"circular ui icon button\" style={{padding: \"1.6em\", marginLeft: \"2%\"}}  > {/*use a modal pop up*/} {/*onClick={() => this.info() }*/}\r\n                <i className=\"info icon\" style={{color: \"#575A89\"}}></i>\r\n                    </button>\r\n                </h1>\r\n                \r\n                <div className=\"ui segment\">\r\n                    <div className=\"ui two wide grid\" style={{width:\"50%\"}}>\r\n                    <VictoryChart \r\n                            padding={{ top: 5, left: 50, right: 50, bottom: 30 }}\r\n                            width={400}\r\n                            height={250} \r\n                            scale={{ x: \"time\" }}\r\n                            containerComponent={\r\n                                <VictoryZoomContainer\r\n                                    zoomDimension=\"x\"\r\n                                    zoomDomain={this.state.zoomDomain}\r\n                                    onZoomDomainChange={this.handleZoom.bind(this)}\r\n                                />\r\n                            }\r\n                        >\r\n                            <VictoryLine\r\n                                style={{\r\n                                    data: { stroke: \"tomato\" }\r\n                                }}\r\n                                data={dataLineChart}\r\n                                //labels={({ dataLineChart }) => `Gas Fuel: ${dataLineChart.y}`}\r\n                                //labelComponent={<VictoryTooltip  cornerRadius={({ dataLineChart }) => dataLineChart.x * 2} />}\r\n                                x=\"Year\"\r\n                                y=\"Value\"\r\n                            /> \r\n                    </VictoryChart>\r\n\r\n                    <VictoryChart\r\n                            padding={{ top: 5, left: 50, right: 50, bottom: 30 }}\r\n                            width={600} \r\n                            height={100} \r\n                            scale={{ x: \"time\" }}\r\n                            containerComponent={\r\n                                <VictoryBrushContainer\r\n                                    brushDimension=\"x\"\r\n                                    brushDomain={this.state.zoomDomain}\r\n                                    onBrushDomainChange={this.handleZoom.bind(this)}\r\n                                />\r\n                            }\r\n                        >\r\n                        <VictoryAxis\r\n                            tickFormat={(x) => new Date(x).getFullYear()}\r\n                        />\r\n                        <VictoryLine\r\n                            style={{\r\n                                data: { stroke: \"tomato\" }\r\n                            }}\r\n                            data={dataLineChart}\r\n                            x=\"Year\"\r\n                            y=\"Value\"\r\n                        />\r\n                    </VictoryChart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { \r\n    VictoryChart, \r\n    VictoryZoomContainer, \r\n    VictoryLine, \r\n    VictoryBrushContainer,\r\n    VictoryAxis,\r\n   // VictoryTooltip\r\n} from 'victory';\r\n\r\nexport default class GlobalTemperature extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          zoomDomain: { x: [new Date(1950, 1, 1), new Date(2016, 1, 1)] },\r\n          isTemp: []\r\n        };\r\n      }\r\n\r\n      handleZoom(domain) {\r\n        this.setState({ zoomDomain: domain });\r\n      }\r\n\r\n    render() {\r\n\r\n        const temperature = this.props.temperature;\r\n        if (temperature === undefined) return <p>No data avaiable.</p>\r\n\r\n        // map every row from emission (array) to x and y values\r\n        const dataLineChart = temperature.map(item => {\r\n            return { \r\n                Year: new Date(item[\"Year\"], 1, 1), \r\n                Value: parseInt(item[\"Mean\"])\r\n            };\r\n        });\r\n        \r\n        return (\r\n            <div>\r\n                <h1 className=\"graph\">Global temperature\r\n                    <button className=\"circular ui icon button\" style={{padding: \"1.6em\", marginLeft: \"2%\"}} onClick={() => this.info() }> {/*use a modal pop up*/}\r\n                        <i className=\"info icon\" style={{color: \"#575A89\"}}></i>\r\n                    </button>\r\n                </h1>                \r\n                <div className=\"ui segment\">\r\n                    <div className=\"ui two wide grid\" style={{width:\"50%\"}}>\r\n                    <VictoryChart \r\n                            padding={{ top: 5, left: 50, right: 50, bottom: 30 }}\r\n                            width={400}\r\n                            height={250} \r\n                            scale={{ x: \"time\" }}\r\n                            containerComponent={\r\n                                <VictoryZoomContainer\r\n                                    zoomDimension=\"x\"\r\n                                    zoomDomain={this.state.zoomDomain}\r\n                                    onZoomDomainChange={this.handleZoom.bind(this)}\r\n                                />\r\n                            }\r\n                        >\r\n                            <VictoryLine\r\n                                style={{\r\n                                    data: { stroke: \"tomato\" }\r\n                                }}\r\n                                data={dataLineChart}\r\n                                //labels={({ dataLineChart }) => `Mean: ${dataLineChart.y}`}\r\n                                //labelComponent={<VictoryTooltip  cornerRadius={({ dataLineChart }) => dataLineChart.x * 2} />}\r\n                                x=\"Year\"\r\n                                y=\"Value\"\r\n                            /> \r\n                    </VictoryChart>\r\n\r\n                    <VictoryChart\r\n                            padding={{ top: 5, left: 50, right: 50, bottom: 30 }}\r\n                            width={600} \r\n                            height={100} \r\n                            scale={{ x: \"time\" }}\r\n                            containerComponent={\r\n                                <VictoryBrushContainer\r\n                                    brushDimension=\"x\"\r\n                                    brushDomain={this.state.zoomDomain}\r\n                                    onBrushDomainChange={this.handleZoom.bind(this)}\r\n                                />\r\n                            }\r\n                        >\r\n                        <VictoryAxis\r\n                            tickFormat={(x) => new Date(x).getFullYear()}\r\n                        />\r\n                        <VictoryLine\r\n                            style={{\r\n                                data: { stroke: \"tomato\" }\r\n                            }}\r\n                            data={dataLineChart}\r\n                            x=\"Year\"\r\n                            y=\"Value\"\r\n                        />\r\n                    </VictoryChart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { \r\n    VictoryChart, \r\n    VictoryZoomContainer, \r\n    VictoryLine, \r\n    VictoryBrushContainer,\r\n    VictoryAxis,\r\n    //VictoryTooltip\r\n} from 'victory';\r\n\r\nexport default class GlacierSize extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          zoomDomain: { x: [new Date(1950, 1, 1), new Date(2014, 1, 1)] },\r\n          isGlacier: []\r\n        };\r\n      }\r\n\r\n      handleZoom(domain) {\r\n        this.setState({ zoomDomain: domain });\r\n      }\r\n\r\n    render() {\r\n\r\n        const glaciersize = this.props.glaciersize;\r\n        if (glaciersize === undefined) return <p>No data avaiable.</p>\r\n\r\n        // map every row from emission (array) to x and y values\r\n        const dataLineChart = glaciersize.map(item => {\r\n            return { \r\n                Year: new Date(item[\"Year\"], 1, 1),\r\n                Value: parseInt(item[\"Mean cumulative mass balance\"])\r\n            };\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"graph\">Glacier size\r\n                    <button className=\"circular ui icon button\" style={{padding: \"1.6em\", marginLeft: \"2%\"}} onClick={() => this.info() }> {/*use a modal pop up*/}\r\n                        <i className=\"info icon\" style={{color: \"#575A89\"}}></i>\r\n                    </button>\r\n                </h1>\r\n                <div className=\"ui segment\">\r\n                    <div className=\"ui two wide grid\" style={{width:\"50%\"}}>\r\n                    <VictoryChart \r\n                            padding={{ top: 5, left: 50, right: 50, bottom: 30 }}\r\n                            width={400}\r\n                            height={250} \r\n                            scale={{ x: \"time\" }}\r\n                            containerComponent={\r\n                                <VictoryZoomContainer\r\n                                    zoomDimension=\"x\"\r\n                                    zoomDomain={this.state.zoomDomain}\r\n                                    onZoomDomainChange={this.handleZoom.bind(this)}\r\n                                />\r\n                            }\r\n                        >\r\n                            <VictoryLine\r\n                                style={{\r\n                                    data: { stroke: \"tomato\" }\r\n                                }}\r\n                                data={dataLineChart}\r\n                                //labels={({ dataLineChart }) => `Mean: ${dataLineChart.y}`}\r\n                                //labelComponent={<VictoryTooltip  cornerRadius={({ dataLineChart }) => dataLineChart.x * 2} />}\r\n                                x=\"Year\"\r\n                                y=\"Value\"\r\n                            /> \r\n                    </VictoryChart>\r\n\r\n                    <VictoryChart\r\n                            padding={{ top: 5, left: 50, right: 50, bottom: 30 }}\r\n                            width={600} \r\n                            height={100} \r\n                            scale={{ x: \"time\" }}\r\n                            containerComponent={\r\n                                <VictoryBrushContainer\r\n                                    brushDimension=\"x\"\r\n                                    brushDomain={this.state.zoomDomain}\r\n                                    onBrushDomainChange={this.handleZoom.bind(this)}\r\n                                />\r\n                            }\r\n                        >\r\n                        <VictoryAxis\r\n                            tickFormat={(x) => new Date(x).getFullYear()}\r\n                        />\r\n                        <VictoryLine\r\n                            style={{\r\n                                data: { stroke: \"tomato\" }\r\n                            }}\r\n                            data={dataLineChart}\r\n                            x=\"Year\"\r\n                            y=\"Value\"\r\n                        />\r\n                    </VictoryChart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport climate from '../pictures/climate.png';\r\nimport meltingice from '../pictures/meltingice.png';\r\nimport calm from \"../pictures/Keep-calm-and-be-sustainable.jpg\"\r\nimport ArticleTeaser from \"../components/ArticleTeaser\";\r\nimport Menu from './Menu';\r\nimport CO2Emission from './ClimateChangeGraph';\r\nimport GlobalTemperature from './GlobalTemperature';\r\nimport GlacierSize from './GlacierSize';\r\n\r\nclass Climate extends Component{\r\n\r\n    state={\r\n        isCO2: true,\r\n        isTemp: false,\r\n        isGlacier: false,\r\n    }\r\n\r\n    triggerCO2EmissionState = () => {\r\n        this.setState({\r\n          ...this.state,\r\n          isCO2: true,\r\n          isGlacier: false,\r\n          isTemp: false\r\n      });\r\n    }\r\n    \r\n    triggerGlobalTemperatureState = () => {\r\n      this.setState({\r\n        ...this.state,\r\n        isCO2: false,\r\n        isTemp: true,\r\n        isGlacier: false\r\n    });\r\n    }\r\n    \r\n    triggerGlacierSizeState = () => {\r\n      this.setState({\r\n        ...this.state,\r\n        isCO2: false,\r\n        isGlacier: true,\r\n        isTemp: false\r\n    });\r\n    }\r\n\r\n    render(){\r\n\r\n        //current Chart is shown\r\n        let currentChart = (\r\n            <CO2Emission \r\n                emission={this.props.emission} \r\n                co2={this.state.isCO2} \r\n            />\r\n        );\r\n        if(this.state.isCO2) {\r\n            currentChart = (\r\n            <CO2Emission \r\n                emission={this.props.emission} \r\n                co2={this.state.isCO2} \r\n            />\r\n            );\r\n        } \r\n        if(this.state.isTemp) {\r\n            currentChart = (\r\n            <GlobalTemperature \r\n                temperature={this.props.temperature} \r\n                temp={this.state.isTemp}  \r\n                />\r\n            );\r\n        }\r\n        if(this.state.isGlacier) {\r\n            currentChart = (\r\n            <GlacierSize \r\n                glaciersize={this.props.glaciersize}\r\n                glacier={this.state.isGlacier} \r\n                />\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {/*<img src={meltingice} style={{ float: \"right\", width: \"18%\" }} alt=\"melting ice\" />*/}\r\n                <img src={climate} style={{width: \"100%\"}} alt=\"climatepic\" />\r\n                <div style={{marginLeft: \"5em\", marginRight: \"5em\", height: \"100%\"}}>\r\n                    <Menu \r\n                        co2={this.triggerCO2EmissionState} \r\n                        temp={this.triggerGlobalTemperatureState} \r\n                        glacier={this.triggerGlacierSizeState} \r\n                    />\r\n                    {currentChart}\r\n                </div>\r\n                <img src={calm} style={{ width: \"100%\" }} alt=\"be sustainable\" />\r\n                <ArticleTeaser />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Climate","import React, {Component} from 'react'\r\nimport Navbar from './Navbar'\r\nimport Style from './Style'\r\nimport Footer from './Footer'\r\nimport Beauty from './Beauty'\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport Sex from './Sex'\r\nimport Politics from './Politics'\r\nimport Climate from './Climate'\r\n\r\nclass AllComponents extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                <Switch>\r\n\r\n                <Route path=\"/style\">\r\n                <Style />\r\n                </Route>\r\n\r\n                <Route path=\"/beauty\">\r\n                <Beauty />\r\n                </Route>\r\n\r\n                <Route path=\"/sex\">\r\n                <Sex />\r\n                </Route>\r\n\r\n                <Route path=\"/politics\">\r\n                <Politics />\r\n                </Route>\r\n\r\n                <Route path=\"/climate\">\r\n                <Climate emission={this.props.emission} temperature={this.props.temperature} glaciersize={this.props.glaciersize} />\r\n                </Route>\r\n\r\n                </Switch>\r\n                <Footer path=\"/climate\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllComponents","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport AllComponents from './components/AllComponents';\r\nimport earth from \"./pictures/loading_earth2.gif\";\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    emission: [],\r\n    temperature: [],\r\n    glaciersize: [],\r\n    sealevel: [],\r\n    loading: true\r\n  }\r\n    \r\n\r\n  async componentDidMount() {\r\n    const url1 = \"https://my.api.mockaroo.com/co2.json?key=8eb9e6f0\";\r\n    const url2 = \"https://my.api.mockaroo.com/temp.json?key=8eb9e6f0\";\r\n    const url3 = \"https://my.api.mockaroo.com/glaciersize.json?key=8eb9e6f0\";\r\n    const url4 = \"https://my.api.mockaroo.com/sealevel.json?key=8eb9e6f0\";\r\n\r\n    const response1 = await fetch(url1);\r\n    const data1 = await response1.json();\r\n\r\n    const response2 = await fetch(url2);\r\n    const data2 = await response2.json();\r\n\r\n    const response3 = await fetch(url3);\r\n    const data3 = await response3.json();\r\n\r\n    const response4 = await fetch(url4);\r\n    const data4 = await response4.json();\r\n\r\n    \r\n    /*if (isNaN(data1)){\r\n    const dataset1 = \"./Dataset1_Global-CO2-Emissions-from-Fossil-Fuels.json\";\r\n    const response1 = await fetch(dataset1);\r\n    const data1 = await response1.json();\r\n    \r\n\r\n    if (isNaN(data2)){\r\n    const dataset2 = \"./Dataset2_Global-Temperature-Time-Series.json\";\r\n    const response2 = await fetch(dataset2);\r\n    const data2 = await response2.json();\r\n    \r\n\r\n    if (isNaN(data3)){\r\n    const dataset3 = \"./Dataset3_Glaciers-Size.json\";\r\n    const response3 = await fetch(dataset3);\r\n    const data3 = await response3.json();\r\n    \r\n\r\n    if (isNaN(data4)){\r\n    const dataset4 = \"./Dataset4_Sea-Level.json\";\r\n    const response4 = await fetch(dataset4);\r\n    const data4 = await response4.json();\r\n  \r\n  */\r\n  \r\n    this.setState({\r\n      emission: data1,\r\n      temperature: data2,\r\n      glaciersize: data3,\r\n      sealevel: data4,\r\n      loading: false\r\n  });\r\n  \r\n//}}}};\r\n\r\n\r\n    //console.log(this.state.emission);\r\n    //console.log(this.state.temperature);\r\n    //console.log(this.state.glaciersize);\r\n    //console.log(this.state.sealevel);\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n     //check if app and data are loading\r\n     if (this.state.loading) {\r\n      return <div>\r\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '60vh'}}>\r\n                  <img src={earth} style={{width: \"300px\"}} alt=\"crying earth\" />\r\n                </div>\r\n                <div>\r\n                  <p className=\"loading\">    loading...</p>\r\n                  \r\n                </div>\r\n              </div>;\r\n      }\r\n\r\n      if (!this.state.emission || !this.state.temperature || !this.state.glaciersize || !this.state.sealevel) {\r\n      return <div>didn't get Climate Change Graph</div>;\r\n      }\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n        <AllComponents emission={this.state.emission} temperature={this.state.temperature} glaciersize={this.state.glaciersize} />\r\n    </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {BrowserRouter} from \"react-router-dom\"\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.478100a2.png\";"],"sourceRoot":""}